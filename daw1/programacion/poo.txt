//numero aleatorio
int numAleatorio = (int) (Math.random() * (max - min + 1) + min);

//fechas
	// Obtener la fecha actual
        LocalDate fechaActual = LocalDate.now();
        System.out.println("Fecha actual: " + fechaActual);

        // Dar formato a la fecha
        DateTimeFormatter formatoFecha = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String fechaFormateada = fechaActual.format(formatoFecha);
        System.out.println("Fecha formateada: " + fechaFormateada);

        // Convertir una cadena a fecha
        String fechaString = "15/01/2024";
        LocalDate fechaConvertida = LocalDate.parse(fechaString, formatoFecha);
        System.out.println("Fecha convertida: " + fechaConvertida);

        // Comparar dos fechas
        LocalDate otraFecha = LocalDate.now().plusDays(1); // Mañana
        if (fechaActual.isBefore(otraFecha)) {
            System.out.println("La fecha actual es anterior a otraFecha.");
        } else if (fechaActual.isAfter(otraFecha)) {
            System.out.println("La fecha actual es posterior a otraFecha.");
        } else {
            System.out.println("Las fechas son iguales.");
        }
    }
}

	//obtener hora actual
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);

        int horas = calendar.get(Calendar.HOUR_OF_DAY);
        int minutos = calendar.get(Calendar.MINUTE);

        return String.format("%02d:%02d", horas, minutos);
    

    	//obtener diaSemana
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);

        int diaSemana = calendar.get(Calendar.DAY_OF_WEEK);

        switch (diaSemana) {
            case Calendar.SUNDAY:
                return "Domingo";
            case Calendar.MONDAY:
                return "Lunes";
            case Calendar.TUESDAY:
                return "Martes";
            case Calendar.WEDNESDAY:
                return "Miércoles";
            case Calendar.THURSDAY:
                return "Jueves";
            case Calendar.FRIDAY:
                return "Viernes";
            case Calendar.SATURDAY:
                return "Sábado";
            default:
                return "Error al obtener el día de la semana";
        }
    }

    	//obtener diaMes
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);

        return calendar.get(Calendar.DAY_OF_MONTH);
    }

    	//obtener diasHastaNochevieja
        Calendar hoy = Calendar.getInstance();
        Calendar nochevieja = Calendar.getInstance();
        nochevieja.set(hoy.get(Calendar.YEAR), Calendar.DECEMBER, 31);

        long diferenciaMillis = nochevieja.getTimeInMillis() - hoy.getTimeInMillis();
        return (int) (diferenciaMillis / (24 * 60 * 60 * 1000));
    }	
