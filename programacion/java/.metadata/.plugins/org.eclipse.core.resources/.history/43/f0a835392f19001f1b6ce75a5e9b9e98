package ejerciciosClase.unidad8.gestisimal;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class Almacen {
	private Map<String, Articulo> almacen;

	public Almacen() {
		this.almacen = new HashMap<String, Articulo>();
	}

	public Set<Articulo> getAlmacen() {
		Set<Articulo> alm = new HashSet<Articulo>();
		alm.addAll(this.almacen.values());
		return alm;
	}

	public void imprimirListadoAlmacen() {
		int index = 1;
		for (Articulo articulo : this.almacen.values()) {
			System.out.println(index++ + ".-" + articulo);
			System.out.println("---------------------------------");
		}
	}

	public void altaArticulo(Articulo articulo) {
		if (!this.almacen.containsKey(articulo.getCodigo())) {
			this.almacen.put(articulo.getCodigo(), articulo);
		} else {
			Articulo act = this.almacen.get(articulo.getCodigo());
			act.setStock(act.getStock() + articulo.getStock());
		}
		System.out.println("Artículo añadido con éxito");
	}

	/**
	 * Devuelve un articulo por su codigo
	 * 
	 * @param codigo
	 * @return art
	 * @throws ArticuloNotFoundException
	 */
	public Articulo getArticuloPorCodigo(String codigo) throws ArticuloNotFoundException {
		Articulo art = null;
		if (this.almacen.containsKey(codigo)) {
			art = this.almacen.get(codigo);
		} else {
			throw new ArticuloNotFoundException();
		}
		return art;
	}

	public void modificarCodigo(String codigoNuevo, String codigoAnterior) {
		if (this.almacen.containsKey(codigoAnterior) && !this.almacen.containsKey(codigoNuevo)) {
			Articulo art = this.almacen.get(codigoAnterior);
			art.setCodigo(codigoNuevo);
			this.almacen.put(codigoNuevo, art);
			this.almacen.remove(codigoAnterior);
			System.out.println("Artículo modificado con éxito");
		}
	}

	public void bajaArticulo(Articulo articulo) {
		this.almacen.remove(articulo.getCodigo());
		System.out.println("Artículo eliminado con éxito");
	}
}
