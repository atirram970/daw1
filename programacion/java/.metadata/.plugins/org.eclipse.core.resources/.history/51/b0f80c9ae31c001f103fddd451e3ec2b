package tareaUD8;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

public class VehiculosDAO {

    public int insertarVehiculo(Vehiculo v) {
        int resultado = 0;
        String query = "INSERT INTO vehiculos (marca, matricula, numKM, fechaMatriculacion, descripcion, precio, nombrePropietario, dniPropietario) "
                     + "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        try {
            Connection connection = DatabaseManager.getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, v.getMarca());
            preparedStatement.setString(2, v.getMatricula());
            preparedStatement.setInt(3, v.getNumKM());
            preparedStatement.setDate(4, java.sql.Date.valueOf(v.getFechaMatriculacion()));
            preparedStatement.setString(5, v.getDescripcion());
            preparedStatement.setDouble(6, v.getPrecio());
            preparedStatement.setString(7, v.getNombrePropietario());
            preparedStatement.setString(8, v.getDniPropietario());
            resultado = preparedStatement.executeUpdate();
            preparedStatement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return resultado;
    }

    public Set<Vehiculo> listarVehiculos() {
        Set<Vehiculo> vehiculos = new HashSet<>();
        String query = "SELECT * FROM vehiculos";
        try {
            Connection connection = DatabaseManager.getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery();
            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String marca = resultSet.getString("marca");
                String matricula = resultSet.getString("matricula");
                int numKM = resultSet.getInt("numKM");
                LocalDate fechaMatriculacion = resultSet.getDate("fechaMatriculacion").toLocalDate();
                String descripcion = resultSet.getString("descripcion");
                double precio = resultSet.getDouble("precio");
                String nombrePropietario = resultSet.getString("nombrePropietario");
                String dniPropietario = resultSet.getString("dniPropietario");
                Vehiculo vehiculo = new Vehiculo(marca, matricula, numKM, fechaMatriculacion, descripcion, precio, nombrePropietario, dniPropietario);
                vehiculo.setId(id);
                vehiculos.add(vehiculo);
            }
            resultSet.close();
            preparedStatement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return vehiculos;
    }

    public Vehiculo buscarVehiculo(String matricula) {
        Vehiculo vehiculo = null;
        String query = "SELECT * FROM vehiculos WHERE matricula = ?";
        try {
            Connection connection = DatabaseManager.getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, matricula);
            ResultSet resultSet = preparedStatement.executeQuery();
            if (resultSet.next()) {
                int id = resultSet.getInt("id");
                String marca = resultSet.getString("marca");
                String matriculaDB = resultSet.getString("matricula");
                int numKM = resultSet.getInt("numKM");
                LocalDate fechaMatriculacion = resultSet.getDate("fechaMatriculacion").toLocalDate();
                String descripcion = resultSet.getString("descripcion");
                double precio = resultSet.getDouble("precio");
                String nombrePropietario = resultSet.getString("nombrePropietario");
                String dniPropietario = resultSet.getString("dniPropietario");
                vehiculo = new Vehiculo(marca, matriculaDB, numKM, fechaMatriculacion, descripcion, precio, nombrePropietario, dniPropietario);
                vehiculo.setId(id);
                System.out.println(vehiculo);
            } else {
                System.out.println("No existe ningún vehículo con la matrícula proporcionada.");
            }
            resultSet.close();
            preparedStatement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return vehiculo;
    }


    public boolean eliminarVehiculo(String matricula) {
        boolean eliminado = false;
        String query = "DELETE FROM vehiculos WHERE matricula = ?";
        try {
            Connection connection = DatabaseManager.getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, matricula);
            int rowsAffected = preparedStatement.executeUpdate();
            if (rowsAffected > 0) {
                eliminado = true;
            }
            preparedStatement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return eliminado;
    }

    public boolean actualizarVehiculo(String matricula, String campo, String nuevoValor) {
        return actualizarVehiculoEnBD(matricula, campo, nuevoValor);
    }

    public boolean actualizarVehiculo(String matricula, String campo, int nuevoValor) {
        return actualizarVehiculoEnBD(matricula, campo, nuevoValor);
    }

    public boolean actualizarVehiculo(String matricula, String campo, double nuevoValor) {
        return actualizarVehiculoEnBD(matricula, campo, nuevoValor);
    }

    public boolean actualizarVehiculo(String matricula, String campo, LocalDate nuevoValor) {
        return actualizarVehiculoEnBD(matricula, campo, java.sql.Date.valueOf(nuevoValor));
    }

    private boolean actualizarVehiculoEnBD(String matricula, String campo, Object nuevoValor) {
        boolean actualizado = false;
        String query = "UPDATE vehiculos SET " + campo + " = ? WHERE matricula = ?";
        try {
            Connection connection = DatabaseManager.getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            if (nuevoValor instanceof String) {
                preparedStatement.setString(1, (String) nuevoValor);
            } else if (nuevoValor instanceof Integer) {
                preparedStatement.setInt(1, (Integer) nuevoValor);
            } else if (nuevoValor instanceof Double) {
                preparedStatement.setDouble(1, (Double) nuevoValor);
            } else if (nuevoValor instanceof java.sql.Date) {
                preparedStatement.setDate(1, (java.sql.Date) nuevoValor);
            }
            preparedStatement.setString(2, matricula);
            int rowsAffected = preparedStatement.executeUpdate();
            if (rowsAffected > 0) {
                actualizado = true;
            }
            preparedStatement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return actualizado;
    }
}
