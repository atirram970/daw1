package tiendaDeportes;

import java.util.InputMismatchException;
import java.util.Scanner;

import org.apache.commons.lang3.StringUtils;

public class LanzadorTienda {
	private static final String NOMBRE_TIENDA = "Deportes Trafalgar";
	private static final int NUM_ARTICULOS = 100;
	private static ArticuloDeportivo[] articulos = new ArticuloDeportivo[NUM_ARTICULOS];
	static Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		System.out.println("Bienvenido a la tienda " + NOMBRE_TIENDA);
		int option = 0;

		while (option != 10) {
			try {
				// Muestra el menu
				mostrarMenu();
				option = leerOpcion();

				switch (option) {
				case 1:
					System.out.println(
					        "El código completo del artículo es: " + getArticuloPorDescripcion().getCodigoCompleto());
					break;
				case 2:
					System.out.println("La descripción del artículo es: " + getArticuloPorCodigo().getDescripcion());
					break;
				case 3:
					System.out
					        .println("El código de ciudad del artículo es: " + getArticuloPorDescripcion().getCiudad());
					break;
				case 4:
					System.out.println(
					        "El código de la tienda del artículo es: " + getArticuloPorDescripcion().getTienda());
					break;
				case 5:
					System.out.println("El código del artículo es: " + getArticuloPorDescripcion().getCodArticulo());
					break;
				case 6:
					System.out.println("El código del tipo del artículo es: " + getArticuloPorDescripcion().getTipo());
					break;
				case 7:
					// TODO:CREAR ARTÍCULO
					crearArticulo();
					break;
				case 8:
					// TODO:DECREMENTAR UNIDADES
					System.out.println("Introduce unidades");
					unidades = Integer.parseInt(leerTeclado());
					articulo.decrementarUnidades(unidades);

					break;
				case 9:
					System.out.println("Las unidades del artículo son: " + articulo.getUnidades());
					break;
				case 10:
					System.out.println("Hasta luego! Gracias por usar la aplicación");
					break;
				default:
					throw new InputMismatchException();

				}
			} catch (InputMismatchException e) {
				System.out.println("Insertar solo numeros entre el 1 y el 10");
			} catch (TiendaDeportesException e) {
				System.out.println(e.getMessage());
			}
		}

	}

	private static void crearArticulo() throws TiendaDeportesException {
		System.out.println("Introduce la descripción del artículo");
		String desc = leerTeclado();
		System.out.println("Introduce el código completo del artículo");
		String codCompleto = leerTeclado();
		System.out.println("Introduce las unidades del artículo");
		int unidades = Integer.parseInt(leerTeclado());
		switch (comprobarTipoArticulo(codCompleto)) {
		case 1:
			System.out.println("Introduce la talla del artículo textil");
			String talla = leerTeclado();
			ArticuloDeportivo articulo = getArticuloPorCodigo(codCompleto);
			if (null != articulo) {
				// Creo un nuevo articulo y lo añado al array
				int hueco = hayEspacioEnTienda();
				if (-1 != hueco) {					
					articulo = new ArticuloDeportivoTextil(desc, codCompleto, unidades, talla);
					articulos[hueco] = articulo;
				}
			} else {
				// Si ya existe aumento sus unidades
				articulo.setUnidades(articulo.getUnidades() + unidades);
			}
			break;
		case 2:
			break;
		case 3:
			break;
		default:
			throw new IllegalArgumentException("Unexpected value: " + key);
		}

	}

	private static int comprobarTipoArticulo(String codCompleto) throws TiendaDeportesException {
		int tipo = 0;
		String tipoStr = StringUtils.substring(codCompleto, 4, 6);
		if ("01".equals(tipoStr)) {
			tipo = 1;
		} else if ("02".equals(tipoStr)) {
			tipo = 2;
		} else if ("03".equals(tipoStr)) {
			tipo = 3;
		} else {
			throw new TiendaDeportesException("El tipo de artículo no es correcto");
		}
		return tipo;

	}

	private static int hayEspacioEnTienda() {
		int index = -1;
		int i = 0;
		boolean hayHueco = false;
		while (!hayHueco && index < articulos.length) {
			if (null == articulos[i++]) {
				hayHueco = true;
				index = i - 1;
			}
		}
		return index;
	}

	/**
	 * Muestra el menu
	 */
	public static void mostrarMenu() {
		System.out.println("1. Ver el código completo del artículo");
		System.out.println("2. Ver la descripción del artículo");
		System.out.println("3. Ver el código de la ciudad");
		System.out.println("4. Ver el código de la tienda");
		System.out.println("5. Ver el código del artículo");
		System.out.println("6. Ver el tipo de artículo");
		System.out.println("7. Crear artículo");
		System.out.println("8. Decrementar unidades");
		System.out.println("9. Consultar unidades");
		System.out.println("10. Salir");
	}

	/**
	 * Devuelve un dato por teclado
	 * 
	 * @return
	 */
	public static String leerTeclado() {
		return scanner.nextLine();
	}

	/**
	 * Devuelve un artículo según su código leído por teclado
	 * 
	 * @return
	 * @throws TiendaDeportesException
	 */
	public static ArticuloDeportivo getArticuloPorCodigo() throws TiendaDeportesException {
		System.out.println("Introduce el código del artículo");
		String input = leerTeclado();
		boolean encontrado = false;
		int i = 0;
		ArticuloDeportivo articulo = null;
		while (!encontrado && i < articulos.length) {
			String codigo = articulos[i].getCodArticulo();
			if (!StringUtils.isBlank(codigo) && codigo.equals(input)) {
				encontrado = true;
				articulo = articulos[i];
			}
			i++;
		}
		if (!encontrado) {
			throw new TiendaDeportesException("No se ha encontrado ningún artículo con el código dado");
		}
		return articulo;
	}

	/**
	 * Devuelve un artículo según su código leído por teclado
	 * 
	 * @return
	 * @throws TiendaDeportesException
	 */
	public static ArticuloDeportivo getArticuloPorCodigo(String codCompleto) throws TiendaDeportesException {
		boolean encontrado = false;
		int i = 0;
		ArticuloDeportivo articulo = null;
		while (!encontrado && i < articulos.length) {
			String codigo = articulos[i].getCodArticulo();
			if (!StringUtils.isBlank(codigo) && codigo.equals(codCompleto)) {
				encontrado = true;
				articulo = articulos[i];
			}
			i++;
		}
		return articulo;
	}

	/**
	 * Devuelve un artículo según su descripción leído por teclado
	 * 
	 * @return
	 * @throws TiendaDeportesException
	 */
	public static ArticuloDeportivo getArticuloPorDescripcion() throws TiendaDeportesException {
		System.out.println("Introduce la descripción del artículo");
		String input = leerTeclado();
		boolean encontrado = false;
		int i = 0;
		ArticuloDeportivo articulo = null;
		while (!encontrado && i < articulos.length) {
			String desc = articulos[i].getDescripcion();
			if (StringUtils.containsIgnoreCase(input, desc)) {
				encontrado = true;
				articulo = articulos[i];
			}
			i++;
		}
		if (!encontrado) {
			throw new TiendaDeportesArticuloNoEncotradoException(
			        "No se ha encontrado ningún artículo con el código dado");
		}
		return articulo;
	}

	/**
	 * Devuelve un dato por teclado de tipo numero
	 * 
	 * @return
	 * @throws InputMismatchException
	 */
	public static int leerOpcion() throws InputMismatchException {
		System.out.println("--------------------------------");
		System.out.println("Seleccione la opción deseada");
		System.out.println("--------------------------------");
		return scanner.nextInt();
	}

}
